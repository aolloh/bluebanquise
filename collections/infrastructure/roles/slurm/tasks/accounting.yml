---
- name: "package <|> Install {{ slurm_packages_to_install['accounting'] | join(' ') }}"
  ansible.builtin.package:
    name: "{{ slurm_packages_to_install['accounting'] }}"
    state: present
  tags:
    - package

- name: file <|> Check if slurmdbd PID file exists
  stat:
    path: "{{ slurm_slurmdbdpidfile }}"
  register: pid_file

- name: file <|> Create slurmdbd PID file if missing
  file:
    path: "{{ slurm_slurmdbdpidfile }}"
    state: touch
    owner: slurm
    group: slurm
    mode: '0644'
  when: not pid_file.stat.exists

- name: "template <|> Generate {{ slurm_home_path }}/slurmdbd.conf"
  ansible.builtin.template:
    src: slurmdbd.conf.j2
    dest: "{{ slurm_home_path }}/slurmdbd.conf"
    owner: slurm
    group: slurm
    mode: 0600
  tags:
    - template
  notify: service <|> restart slurmdbd

- name: include_tasks <|> Deploy and configure local mysql
  ansible.builtin.include_tasks: "accounting_local_mysql.yml"
  when: slurm_accounting_enable_local_mysql

- name: include_tasks <|> Configure external mysql
  ansible.builtin.include_tasks: "accounting_external_mysql.yml"
  when: not slurm_accounting_enable_local_mysql

# - name: command <|> Check if slurm_acct_db database has been created
#   ansible.builtin.command: mysql -e "SHOW DATABASES  LIKE 'slurm_acct_db'"
#   register: slurm_database_exist
#   changed_when: false
#   tags:
#     - service

# - name: command <|> Check if slurm database user has been created
#   ansible.builtin.command: mysql -e "use mysql; select Host,User from user;"
#   register: slurm_database_user_exist
#   changed_when: false
#   tags:
#     - service

# - name: command <|> Create slurm user database
#  ansible.builtin.command: mysql -e "CREATE USER '{{ slurm_accounting_mysql_login_user }}'@'{{ slurm_accounting_mysql_login_host }}' IDENTIFIED BY '{{ slurm_accounting_mysql_login_password }}';"
#  register: slurm_create_user
#  changed_when: false
#  when:
#    - slurm_accounting_mysql_create_user
#    - ansible_distribution == 'Ubuntu'
#  tags:
#   - service

# - name: command <|> Give slurm user privilege
#  ansible.builtin.command: mysql -e "GRANT ALL PRIVILEGES ON slurm_acct_db.* TO '{{ slurm_accounting_mysql_login_user }}'@'{{ slurm_accounting_mysql_login_host}}';"
#  register: slurm_user_privilege
#  changed_when: false
#  when:
#    - slurm_accounting_mysql_create_user
#    - ansible_distribution == 'Ubuntu'
#  tags:
#    - service

- name: service <|> Manage slurmdbd state
  ansible.builtin.service:
    name: slurmdbd
    enabled: "{{ (slurm_enable_services | default(bb_enable_services) | default(true) | bool) | ternary('yes', 'no') }}"
    state: "{{ (slurm_start_services | default(bb_start_services) | default(true) | bool) | ternary('started', omit) }}"

- name: "firewalld <|> Add Slurmdbd ports to firewall's {{ slurm_firewall_zone | default('public') }} zone"
  ansible.posix.firewalld:
    zone: "{{ slurm_firewall_zone | default('public') }}"
    port: "{{ slurm_slurmdbd_port }}/tcp"
    immediate: "yes"
    permanent: "yes"
    state: enabled
  when:
    - ansible_facts.os_family == "RedHat"
    - os_firewall | default(false) | bool
  tags:
    - firewall
